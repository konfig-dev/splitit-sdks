/* DO NOT TOUCH: This file was generated by Konfig */

/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { InstallmentPlanCancelResponse } from '../models/InstallmentPlanCancelResponse';
import type { InstallmentPlanCreateRequest } from '../models/InstallmentPlanCreateRequest';
import type { InstallmentPlanGetResponse } from '../models/InstallmentPlanGetResponse';
import type { InstallmentPlanModel } from '../models/InstallmentPlanModel';
import type { InstallmentPlanRefundRequest } from '../models/InstallmentPlanRefundRequest';
import type { InstallmentPlanRefundResponse } from '../models/InstallmentPlanRefundResponse';
import type { InstallmentPlanUpdateRequestByIdentifier } from '../models/InstallmentPlanUpdateRequestByIdentifier';
import type { InstallmentPlanUpdateResponse } from '../models/InstallmentPlanUpdateResponse';
import type { UpdateOrderRequest } from '../models/UpdateOrderRequest';
import type { VerifyAuthorizationResponse } from '../models/VerifyAuthorizationResponse';

import type { CancelablePromise } from '../core/CancelablePromise';
import type { BaseHttpRequest } from '../core/BaseHttpRequest';

export class InstallmentPlanService {

    constructor(public readonly httpRequest: BaseHttpRequest) {}

    /**
     * @returns InstallmentPlanModel
     * @throws ApiError
     */
    public get({
        installmentPlanNumber,
        xSplititIdempotencyKey,
    }: {
        installmentPlanNumber: string,
        xSplititIdempotencyKey: string,
    }): CancelablePromise<InstallmentPlanModel> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/api/installmentplans/{installmentPlanNumber}',
            path: {
                'installmentPlanNumber': installmentPlanNumber,
            },
            headers: {
                'X-Splitit-IdempotencyKey': xSplititIdempotencyKey,
            },
        });
    }

    /**
     * @returns InstallmentPlanGetResponse
     * @throws ApiError
     */
    public search({
        xSplititIdempotencyKey,
        installmentPlanNumber,
        refOrderNumber,
        extendedParams,
    }: {
        xSplititIdempotencyKey: string,
        installmentPlanNumber?: string,
        refOrderNumber?: string,
        extendedParams?: Record<string, string>,
    }): CancelablePromise<InstallmentPlanGetResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/api/installmentplans/search',
            headers: {
                'X-Splitit-IdempotencyKey': xSplititIdempotencyKey,
            },
            query: {
                'installmentPlanNumber': installmentPlanNumber,
                'refOrderNumber': refOrderNumber,
                'extendedParams': extendedParams,
            },
        });
    }

    /**
     * @returns InstallmentPlanModel
     * @throws ApiError
     */
    public post({
        xSplititIdempotencyKey,
        requestBody,
        xSplititTestMode,
    }: {
        xSplititIdempotencyKey: string,
        requestBody: InstallmentPlanCreateRequest,
        xSplititTestMode?: 'None' | 'Regular' | 'Fast' | 'Automation',
    }): CancelablePromise<InstallmentPlanModel> {
        return this.httpRequest.request({
            method: 'POST',
            url: '/api/installmentplans',
            headers: {
                'X-Splitit-TestMode': xSplititTestMode,
                'X-Splitit-IdempotencyKey': xSplititIdempotencyKey,
            },
            body: requestBody,
            mediaType: 'application/json-patch+json',
        });
    }

    /**
     * @returns VerifyAuthorizationResponse
     * @throws ApiError
     */
    public verifyAuthorization({
        installmentPlanNumber,
        xSplititIdempotencyKey,
    }: {
        installmentPlanNumber: string,
        xSplititIdempotencyKey: string,
    }): CancelablePromise<VerifyAuthorizationResponse> {
        return this.httpRequest.request({
            method: 'GET',
            url: '/api/installmentplans/{installmentPlanNumber}/verifyauthorization',
            path: {
                'installmentPlanNumber': installmentPlanNumber,
            },
            headers: {
                'X-Splitit-IdempotencyKey': xSplititIdempotencyKey,
            },
        });
    }

    /**
     * @returns InstallmentPlanUpdateResponse
     * @throws ApiError
     */
    public updateOrder({
        installmentPlanNumber,
        xSplititIdempotencyKey,
        requestBody,
    }: {
        installmentPlanNumber: string,
        xSplititIdempotencyKey: string,
        requestBody: UpdateOrderRequest,
    }): CancelablePromise<InstallmentPlanUpdateResponse> {
        return this.httpRequest.request({
            method: 'PUT',
            url: '/api/installmentplans/{installmentPlanNumber}/updateorder',
            path: {
                'installmentPlanNumber': installmentPlanNumber,
            },
            headers: {
                'X-Splitit-IdempotencyKey': xSplititIdempotencyKey,
            },
            body: requestBody,
            mediaType: 'application/json-patch+json',
        });
    }

    /**
     * @returns InstallmentPlanUpdateResponse
     * @throws ApiError
     */
    public updateOrder2({
        xSplititIdempotencyKey,
        requestBody,
    }: {
        xSplititIdempotencyKey: string,
        requestBody: InstallmentPlanUpdateRequestByIdentifier,
    }): CancelablePromise<InstallmentPlanUpdateResponse> {
        return this.httpRequest.request({
            method: 'PUT',
            url: '/api/installmentplans/updateorder',
            headers: {
                'X-Splitit-IdempotencyKey': xSplititIdempotencyKey,
            },
            body: requestBody,
            mediaType: 'application/json-patch+json',
        });
    }

    /**
     * @returns InstallmentPlanRefundResponse
     * @throws ApiError
     */
    public refund({
        installmentPlanNumber,
        xSplititIdempotencyKey,
        requestBody,
    }: {
        installmentPlanNumber: string,
        xSplititIdempotencyKey: string,
        requestBody: InstallmentPlanRefundRequest,
    }): CancelablePromise<InstallmentPlanRefundResponse> {
        return this.httpRequest.request({
            method: 'POST',
            url: '/api/installmentplans/{installmentPlanNumber}/refund',
            path: {
                'installmentPlanNumber': installmentPlanNumber,
            },
            headers: {
                'X-Splitit-IdempotencyKey': xSplititIdempotencyKey,
            },
            body: requestBody,
            mediaType: 'application/json-patch+json',
        });
    }

    /**
     * @returns InstallmentPlanCancelResponse
     * @throws ApiError
     */
    public cancel({
        installmentPlanNumber,
        xSplititIdempotencyKey,
    }: {
        installmentPlanNumber: string,
        xSplititIdempotencyKey: string,
    }): CancelablePromise<InstallmentPlanCancelResponse> {
        return this.httpRequest.request({
            method: 'POST',
            url: '/api/installmentplans/{installmentPlanNumber}/cancel',
            path: {
                'installmentPlanNumber': installmentPlanNumber,
            },
            headers: {
                'X-Splitit-IdempotencyKey': xSplititIdempotencyKey,
            },
        });
    }

}
